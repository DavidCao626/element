module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _locale = __webpack_require__(2);

var _locale2 = _interopRequireDefault(_locale);

var _collapseTransition = __webpack_require__(3);

var _collapseTransition2 = _interopRequireDefault(_collapseTransition);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Automatically generated by './build/bin/build-entry.js' */

{
  {
    include;
  }
}


var components = [Pagination, Dialog, Autocomplete, Dropdown, DropdownMenu, DropdownItem, Menu, Submenu, MenuItem, MenuItemGroup, Input, InputNumber, Radio, RadioGroup, RadioButton, Checkbox, CheckboxButton, CheckboxGroup, Switch, Select, Option, OptionGroup, Button, ButtonGroup, Table, TableColumn, DatePicker, TimeSelect, TimePicker, Popover, Tooltip, Breadcrumb, BreadcrumbItem, Form, FormItem, Tabs, TabPane, Tag, Tree, Alert, Slider, Icon, Row, Col, Upload, Progress, Spinner, Badge, Card, Rate, Steps, Step, Carousel, Scrollbar, CarouselItem, Collapse, CollapseItem, Cascader, ColorPicker, Transfer, Container, Header, Aside, Main, Footer, _collapseTransition2.default];

var install = function install(Vue) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  _locale2.default.use(opts.locale);
  _locale2.default.i18n(opts.i18n);

  components.map(function (component) {
    Vue.component(component.name, component);
  });

  Vue.use(Loading.directive);

  var ELEMENT = {};
  ELEMENT.size = opts.size || '';

  Vue.prototype.$loading = Loading.service;
  Vue.prototype.$msgbox = MessageBox;
  Vue.prototype.$alert = MessageBox.alert;
  Vue.prototype.$confirm = MessageBox.confirm;
  Vue.prototype.$prompt = MessageBox.prompt;
  Vue.prototype.$notify = Notification;
  Vue.prototype.$message = Message;

  Vue.prototype.$ELEMENT = ELEMENT;
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

module.exports = {
  version: '0.1.0',
  locale: _locale2.default.use,
  i18n: _locale2.default.i18n,
  install: install,
  CollapseTransition: _collapseTransition2.default,
  Loading: Loading,
  Pagination: Pagination,
  Dialog: Dialog,
  Autocomplete: Autocomplete,
  Dropdown: Dropdown,
  DropdownMenu: DropdownMenu,
  DropdownItem: DropdownItem,
  Menu: Menu,
  Submenu: Submenu,
  MenuItem: MenuItem,
  MenuItemGroup: MenuItemGroup,
  Input: Input,
  InputNumber: InputNumber,
  Radio: Radio,
  RadioGroup: RadioGroup,
  RadioButton: RadioButton,
  Checkbox: Checkbox,
  CheckboxButton: CheckboxButton,
  CheckboxGroup: CheckboxGroup,
  Switch: Switch,
  Select: Select,
  Option: Option,
  OptionGroup: OptionGroup,
  Button: Button,
  ButtonGroup: ButtonGroup,
  Table: Table,
  TableColumn: TableColumn,
  DatePicker: DatePicker,
  TimeSelect: TimeSelect,
  TimePicker: TimePicker,
  Popover: Popover,
  Tooltip: Tooltip,
  MessageBox: MessageBox,
  Breadcrumb: Breadcrumb,
  BreadcrumbItem: BreadcrumbItem,
  Form: Form,
  FormItem: FormItem,
  Tabs: Tabs,
  TabPane: TabPane,
  Tag: Tag,
  Tree: Tree,
  Alert: Alert,
  Notification: Notification,
  Slider: Slider,
  Icon: Icon,
  Row: Row,
  Col: Col,
  Upload: Upload,
  Progress: Progress,
  Spinner: Spinner,
  Message: Message,
  Badge: Badge,
  Card: Card,
  Rate: Rate,
  Steps: Steps,
  Step: Step,
  Carousel: Carousel,
  Scrollbar: Scrollbar,
  CarouselItem: CarouselItem,
  Collapse: Collapse,
  CollapseItem: CollapseItem,
  Cascader: Cascader,
  ColorPicker: ColorPicker,
  Transfer: Transfer,
  Container: Container,
  Header: Header,
  Aside: Aside,
  Main: Main,
  Footer: Footer
};

module.exports.default = module.exports;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("element-ui/lib/locale");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("element-ui/lib/transitions/collapse-transition");

/***/ })
/******/ ]);